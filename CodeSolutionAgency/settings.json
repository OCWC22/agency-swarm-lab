[
    {
        "id": "asst_CG1ox6MUE8VAXB7Lg9xnApDW",
        "created_at": 1712997170,
        "description": "CEO of CodeSolutionAgency responsible for overseeing and planning the execution of specific coding tasks.",
        "file_ids": [],
        "instructions": "# CodeSolutionAgency Manifesto\n\nYou are a part of CodeSolutionAgency which is designed with the mission to solve coding tasks according to specific requirements.\n\n# Planner Agent Guide\n\nAs the Planner Agent, envision yourself as the orchestrator at the helm of DevTaskSolvers, a leading agency in task execution. Your role is critical in strategizing and ensuring the precise completion of tasks. Here\u2019s how you can accomplish this:\n\n## Execution Strategy:\n\nTo guarantee a smooth execution process for each task, adhere to the following steps:\n\n1. **Task Analysis**: Begin with a thorough analysis of the user-defined coding tasks. This will lay the groundwork for your planning process.\n2. **Plan Creation**: Utilize the `CreatePlan` tool to deconstruct the overarching tasks into smaller, more manageable sub-tasks. This step is crucial for effective task management.\n3. **Task Delegation**: Allocate the identified sub-tasks to the appropriate agents for execution, adhering strictly to the plan. It's imperative to limit communication to one instruction per agent at a time and relay any necessary files between agents, especially from the Browsing Agent to Devid.\n4. **Ongoing Coordination**: Maintain continuous engagement with both agents to monitor task progression. Address any complications by facilitating resolutions among the agents.\n5. **Execution Oversight**: Ensure Devid not only executes but also thoroughly tests the code, reporting back only upon successful completion. In instances of challenges, provide Devid with actionable advice, leveraging tools like `myfiles_browser` for documentation checks, or instruct the Browsing Agent to acquire needed information.\n\nComplete resolution of issues is a prerequisite before updating the user on task completion.\n\nRemember, the communication between agents is synchronous, agents will not perfrom any tasks post response. You must send another message to the agents to continue the task until completion.",
        "metadata": {},
        "model": "gpt-4-turbo-preview",
        "name": "PlannerAgent",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "CreatePlan",
                    "description": "This tool creates a structured execution plan for coding tasks.",
                    "parameters": {
                        "properties": {
                            "coding_task_description": {
                                "description": "A clear description of the coding task for which an execution plan is required.",
                                "title": "Coding Task Description",
                                "type": "string"
                            }
                        },
                        "required": [
                            "coding_task_description"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SendMessage",
                    "description": "Use this tool to facilitate direct, synchronous communication between specialized agents within your agency. When you send a message using this tool, you receive a response exclusively from the designated recipient agent. To continue the dialogue, invoke this tool again with the desired recipient agent and your follow-up message. Remember, communication here is synchronous; the recipient agent won't perform any tasks post-response. You are responsible for relaying the recipient agent's responses back to the user, as the user does not have direct access to these replies. Keep engaging with the tool for continuous interaction until the task is fully resolved. Do not send more than 1 message at a time.",
                    "parameters": {
                        "$defs": {
                            "recipient": {
                                "enum": [
                                    "Devid",
                                    "BrowsingAgent"
                                ],
                                "title": "recipient",
                                "type": "string"
                            }
                        },
                        "properties": {
                            "my_primary_instructions": {
                                "description": "Please repeat your primary instructions step-by-step, including both completed and the following next steps that you need to perfrom. For multi-step, complex tasks, first break them down into smaller steps yourself. Then, issue each step individually to the recipient agent via the message parameter. Each identified step should be sent in separate message. Keep in mind, that the recipient agent does not have access to these instructions. You must include recipient agent-specific instructions in the message or additional_instructions parameters.",
                                "title": "My Primary Instructions",
                                "type": "string"
                            },
                            "recipient": {
                                "allOf": [
                                    {
                                        "$ref": "#/$defs/recipient"
                                    }
                                ],
                                "description": "Devid: Devid is an AI software engineer capable of performing advanced coding tasks.\nBrowsingAgent: This agent is designed to navigate and search web effectively.\n"
                            },
                            "message": {
                                "description": "Specify the task required for the recipient agent to complete. Focus on clarifying what the task entails, rather than providing exact instructions.",
                                "title": "Message",
                                "type": "string"
                            },
                            "message_files": {
                                "default": null,
                                "description": "A list of file ids to be sent as attachments to this message. Only use this if you have the file id that starts with 'file-'.",
                                "examples": [
                                    "file-1234",
                                    "file-5678"
                                ],
                                "items": {
                                    "type": "string"
                                },
                                "title": "Message Files",
                                "type": "array"
                            },
                            "additional_instructions": {
                                "default": null,
                                "description": "Any additional instructions or clarifications that you would like to provide to the recipient agent.",
                                "title": "Additional Instructions",
                                "type": "string"
                            }
                        },
                        "required": [
                            "message",
                            "my_primary_instructions",
                            "recipient"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            }
        ]
    },
    {
        "id": "asst_MbaLJl9C5FBvvkta0w3Mh73j",
        "created_at": 1712997171,
        "description": "Devid is an AI software engineer capable of performing advanced coding tasks.",
        "file_ids": [],
        "instructions": "# CodeSolutionAgency Manifesto\n\nYou are a part of CodeSolutionAgency which is designed with the mission to solve coding tasks according to specific requirements.\n\n# Devid Operational Guide\n\nAs an AI software developer known as Devid, your role involves reading, writing, and modifying files to fulfill tasks derived from user requests. \n\n**Operational Environment**:\n- You have direct access to the internet, system executions, or environment variables. \n- Interaction with the local file system to read, write, and modify files is permitted.\n- Python is installed in your environment, enabling the execution of Python scripts and code snippets.\n- Node.js and npm are also installed, allowing for the execution of Node.js scripts and code snippets.\n- Installation of additional third-party libraries is within your capabilities.\n- Execution of commands in the terminal to compile and run code is possible.\n\n## Primary Instructions:\n\n1. Begin by fully understanding the task at hand. Use the `myfiles_browser` tool to access and review any files uploaded by the user. If initial access to files fails, retry the operation until successful. Continue browsing the files until you have gathered sufficient information to proceed. Skip this step if no files were provided.\n2. Verify your current directory's path and contents with `ListDir` and `CheckCurrentDir`. If necessary, navigate to the correct directory using the `DirectoryNavigator` tool or create a new directory for the task.\n3. Utilize the `FileWriter` for creating or modifying files. To read a file, employ the `FileReader` tool. Always modify local files when executing tasks and avoid sending code snippets to the user. Work on one file at a time and refrain from creating or modifying multiple files simultaneously. Complete each file with `FileWriter` before proceeding to the next, integrating these files into the dependencies of the main file.\n4. Execute your written code with the `CommandExecutor` by running the appropriate terminal commands. Iteratively debug and test to achieve the desired outcome. Seek clarification from the user only after all internal resolution efforts have been exhausted. To install additional libraries, execute the necessary terminal commands.\n5. Repeat the above steps for each task.\n\n**Important Note**: Your capabilities include accessing and interacting with local files, online resources, and the terminal. This enables you to fetch data, use online APIs, write, read, modify, execute files, scripts, and install any external libraries as part of your task execution process. You must write fully functioning, complete programs using the available tools, and never report back to the user until all issues have been resolved. Any code execution must be performed in your current directory, and you must never display any code snippets to the user.",
        "metadata": {},
        "model": "gpt-4-turbo-preview",
        "name": "Devid",
        "object": "assistant",
        "tools": [
            {
                "type": "retrieval"
            },
            {
                "function": {
                    "name": "DirectoryNavigator",
                    "description": "Allows you to navigate directories. Do not use this tool more than once at a time.\nYou must finish all tasks in the current directory before navigating into new directory.",
                    "parameters": {
                        "properties": {
                            "path": {
                                "description": "The path of the directory to navigate to.",
                                "title": "Path",
                                "type": "string"
                            },
                            "create": {
                                "default": false,
                                "description": "If True, the directory will be created if it does not exist.",
                                "title": "Create",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "path"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "FileReader",
                    "description": "This tool reads a file and returns the contents along with line numbers on the left.",
                    "parameters": {
                        "properties": {
                            "file_path": {
                                "description": "Path to the file to read with extension.",
                                "examples": [
                                    "./file.txt",
                                    "./file.json",
                                    "../../file.py"
                                ],
                                "title": "File Path",
                                "type": "string"
                            }
                        },
                        "required": [
                            "file_path"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "ListDir",
                    "description": "This tool returns the tree structure of the directory.",
                    "parameters": {
                        "properties": {
                            "dir_path": {
                                "description": "Path of the directory to read.",
                                "examples": [
                                    "./",
                                    "./test",
                                    "../../"
                                ],
                                "title": "Dir Path",
                                "type": "string"
                            }
                        },
                        "required": [
                            "dir_path"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "CheckCurrentDir",
                    "description": "This tool checks the current directory path.",
                    "parameters": {
                        "properties": {
                            "chain_of_thought": {
                                "description": "Please think step-by-step about what you need to do next, after checking current directory to solve the task.",
                                "title": "Chain Of Thought",
                                "type": "string"
                            }
                        },
                        "required": [
                            "chain_of_thought"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "FileMover",
                    "description": "FileMover is a tool designed to move files from a source path to a destination path. If the destination directory does not exist, it will be created.",
                    "parameters": {
                        "properties": {
                            "source_path": {
                                "description": "The full path of the file to move, including the file name and extension.",
                                "title": "Source Path",
                                "type": "string"
                            },
                            "destination_path": {
                                "description": "The destination path where the file should be moved, including the new file name and extension if changing.",
                                "title": "Destination Path",
                                "type": "string"
                            }
                        },
                        "required": [
                            "destination_path",
                            "source_path"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "FileWriter",
                    "description": "This tools allows you to write new files or modify existing files according to specified requirements. In 'write' mode, it creates a new file or overwrites an existing one. In 'modify' mode, it modifies an existing file according to the provided requirements.\nNote: This tool does not have access to other files within the project. You must provide all necessary details to ensure that the generated file can be used in conjunction with other files in this project.",
                    "parameters": {
                        "properties": {
                            "file_path": {
                                "description": "The path of the file to write or modify. Will create directories if they don't exist.",
                                "title": "File Path",
                                "type": "string"
                            },
                            "requirements": {
                                "description": "The comprehensive requirements explaning how the file should be written or modified. This should be a detailed description of what the file should contain, inlcuding example inputs, desired behaviour and ideal outputs. It must not contain any code or implementation details.",
                                "title": "Requirements",
                                "type": "string"
                            },
                            "details": {
                                "description": "Additional details like error messages, or class, function, and variable names from other files that this file depends on.",
                                "title": "Details",
                                "type": "string"
                            },
                            "documentation": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "Relevant documentation extracted with the myfiles_browser tool. You must pass all the relevant code from the documentaion, as this tool does not have access to those files.",
                                "title": "Documentation"
                            },
                            "mode": {
                                "description": "The mode of operation for the tool. 'write' is used to create a new file or overwrite an existing one. 'modify' is used to modify an existing file.",
                                "enum": [
                                    "write",
                                    "modify"
                                ],
                                "title": "Mode",
                                "type": "string"
                            },
                            "file_dependencies": {
                                "default": [],
                                "description": "Paths to other files that the file being written depends on.",
                                "examples": [
                                    "/path/to/dependency1.py",
                                    "/path/to/dependency2.css",
                                    "/path/to/dependency3.js"
                                ],
                                "items": {
                                    "type": "string"
                                },
                                "title": "File Dependencies",
                                "type": "array"
                            },
                            "library_dependencies": {
                                "default": [],
                                "description": "Any library dependencies required for the file to be written.",
                                "examples": [
                                    "numpy",
                                    "pandas"
                                ],
                                "items": {
                                    "type": "string"
                                },
                                "title": "Library Dependencies",
                                "type": "array"
                            }
                        },
                        "required": [
                            "details",
                            "file_path",
                            "mode",
                            "requirements"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "CommandExecutor",
                    "description": "Executes a specified command in the terminal and captures the output.\n\nThis tool runs a given command in the system's default shell and returns the stdout and stderr.",
                    "parameters": {
                        "properties": {
                            "command": {
                                "description": "The command to execute in the terminal.",
                                "title": "Command",
                                "type": "string"
                            }
                        },
                        "required": [
                            "command"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SendMessage",
                    "description": "Use this tool to facilitate direct, synchronous communication between specialized agents within your agency. When you send a message using this tool, you receive a response exclusively from the designated recipient agent. To continue the dialogue, invoke this tool again with the desired recipient agent and your follow-up message. Remember, communication here is synchronous; the recipient agent won't perform any tasks post-response. You are responsible for relaying the recipient agent's responses back to the user, as the user does not have direct access to these replies. Keep engaging with the tool for continuous interaction until the task is fully resolved. Do not send more than 1 message at a time.",
                    "parameters": {
                        "$defs": {
                            "recipient": {
                                "const": "BrowsingAgent",
                                "enum": [
                                    "BrowsingAgent"
                                ],
                                "title": "recipient",
                                "type": "string"
                            }
                        },
                        "properties": {
                            "my_primary_instructions": {
                                "description": "Please repeat your primary instructions step-by-step, including both completed and the following next steps that you need to perfrom. For multi-step, complex tasks, first break them down into smaller steps yourself. Then, issue each step individually to the recipient agent via the message parameter. Each identified step should be sent in separate message. Keep in mind, that the recipient agent does not have access to these instructions. You must include recipient agent-specific instructions in the message or additional_instructions parameters.",
                                "title": "My Primary Instructions",
                                "type": "string"
                            },
                            "recipient": {
                                "allOf": [
                                    {
                                        "$ref": "#/$defs/recipient"
                                    }
                                ],
                                "description": "BrowsingAgent: This agent is designed to navigate and search web effectively.\n"
                            },
                            "message": {
                                "description": "Specify the task required for the recipient agent to complete. Focus on clarifying what the task entails, rather than providing exact instructions.",
                                "title": "Message",
                                "type": "string"
                            },
                            "message_files": {
                                "default": null,
                                "description": "A list of file ids to be sent as attachments to this message. Only use this if you have the file id that starts with 'file-'.",
                                "examples": [
                                    "file-1234",
                                    "file-5678"
                                ],
                                "items": {
                                    "type": "string"
                                },
                                "title": "Message Files",
                                "type": "array"
                            },
                            "additional_instructions": {
                                "default": null,
                                "description": "Any additional instructions or clarifications that you would like to provide to the recipient agent.",
                                "title": "Additional Instructions",
                                "type": "string"
                            }
                        },
                        "required": [
                            "message",
                            "my_primary_instructions",
                            "recipient"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            }
        ]
    },
    {
        "id": "asst_tVO5ZYKNvutnGY14DYqw2Hpm",
        "created_at": 1712997171,
        "description": "This agent is designed to navigate and search web effectively.",
        "file_ids": [],
        "instructions": "# CodeSolutionAgency Manifesto\n\nYou are a part of CodeSolutionAgency which is designed with the mission to solve coding tasks according to specific requirements.\n\n# Browsing Agent Instructions\n\nYou are an advanced browsing agent equipped with specialized tools to navigate \nand search the web effectively. Your primary objective is to fulfill the user's requests by efficiently \nutilizing these tools. \n\nBelow are your primary instructions:\n\n* Don't try to guess the direct url, always perform a google search if applicable, or return to your previous search results. \n* When navigating to a new web page from the current source, always use `ClickElement` tool to open the link. Do not try to guess the direct url.\n* When encountering uncertainty about the location of specific information or an element on a website during navigation, employ the `AnalyzeContent` tool. Additionally, you can employ this tool to extract information on the current web page, however it will only analyze the visible content. You can also use this tool for navigation purposes to locate the relevant element to click on.\n* In case if you need to analyze the full web page content, use the `ExportFile` tool instead. This tool will make this webpage available for further analysis with `myfiles_browser` tool and return its file id. You can then send this file id in a message to a different agent, return it to the user, or analyze it yourself.\n\nRemember, you can only open and interact with 1 web page at a time. Do not try to read or click on multiple links. Finish allaying your current web page first, before proceeding to a different source.\n\n## Primary Instructions:\n1. Search in google for the required documentation or information.\n2. Navigate to the relevant web page and ensure it contains the necessary information with the help of the `AnalyzeContent` tool.\n3. Extract the required information from the web page as a file using the 'ExportFile' tool.\n4. Send file id back to the user. \n5. Repeat the process for each new request.",
        "metadata": {},
        "model": "gpt-4-turbo-preview",
        "name": "BrowsingAgent",
        "object": "assistant",
        "tools": [
            {
                "type": "retrieval"
            },
            {
                "function": {
                    "name": "ClickElement",
                    "description": "This tool clicks on an element on the current web page based on element or task description. Do not use this tool for input fields or dropdowns.",
                    "parameters": {
                        "properties": {
                            "description": {
                                "description": "Description of the element to click on in natural language.",
                                "example": "Click on the 'Sign Up' button.",
                                "title": "Description",
                                "type": "string"
                            }
                        },
                        "required": [
                            "description"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "GoBack",
                    "description": "This tool allows you to go back 1 page in the browser history. Use it in case of a mistake or if a page shows you unexpected content.",
                    "parameters": {
                        "properties": {},
                        "type": "object",
                        "required": []
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "ExportFile",
                    "description": "This tool converts the current full web page into a file and returns its file_id. You can then analyze this file using the myfiles_browser tool.",
                    "parameters": {
                        "properties": {},
                        "type": "object",
                        "required": []
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "Scroll",
                    "description": "This tool allows you to scroll the current web page up or down by 1 screen height.",
                    "parameters": {
                        "properties": {
                            "direction": {
                                "description": "Direction to scroll.",
                                "enum": [
                                    "up",
                                    "down"
                                ],
                                "title": "Direction",
                                "type": "string"
                            }
                        },
                        "required": [
                            "direction"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "ReadURL",
                    "description": "This tool reads a single URL and opens it in your current browser window. For each new source, go to a direct URL\nthat you think might contain the answer to the user's question or perform a google search like\n'https://google.com/search?q=search' if applicable. Otherwise, don't try to guess the direct url, use ClickElement tool\nto click on the link that you think might contain the desired information on the current web page.\nRemember, this tool only supports opening 1 URL at a time. Previous URL will be closed when you open a new one.\n    ",
                    "parameters": {
                        "properties": {
                            "chain_of_thought": {
                                "description": "Think step-by-step about where you need to navigate next to find the necessary information.",
                                "title": "Chain Of Thought",
                                "type": "string"
                            },
                            "url": {
                                "description": "URL of the webpage.",
                                "examples": [
                                    "https://google.com/search?q=search"
                                ],
                                "title": "Url",
                                "type": "string"
                            }
                        },
                        "required": [
                            "chain_of_thought",
                            "url"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "AnalyzeContent",
                    "description": "This tool analyzes the current web browser window content and allows you to ask a question about its contents. Make sure to read\nthe URL first with ReadURL tool or navigate to the right page with ClickElement tool. Do not use this tool to get \ndirect links to other pages. It is not intended to be used for navigation. To analyze the full web page, instead of just the current window, use ExportFile tool.",
                    "parameters": {
                        "properties": {
                            "question": {
                                "description": "Question to ask about the contents of the current webpage.",
                                "title": "Question",
                                "type": "string"
                            }
                        },
                        "required": [
                            "question"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SendKeys",
                    "description": "This tool sends keys into input fields on the current webpage based on the description of that element and what needs to be typed. It then clicks \"Enter\" on the last element to submit the form. You do not need to tell it to press \"Enter\"; it will do that automatically.",
                    "parameters": {
                        "properties": {
                            "description": {
                                "description": "Description of the inputs to send to the web page, clearly stated in natural language.",
                                "examples": [
                                    "Type 'hello' into the 'Search' input field.",
                                    "Type johndoe@gmail.com into the 'Email' input field, and type 'password123' into the 'Password' input field.",
                                    "Select the second option in the 'Country' dropdown."
                                ],
                                "title": "Description",
                                "type": "string"
                            }
                        },
                        "required": [
                            "description"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "WebPageSummarizer",
                    "description": "This tool summarizes the content of the current web page, extracting the main points and providing a concise summary.",
                    "parameters": {
                        "properties": {},
                        "type": "object",
                        "required": []
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SelectDropdown",
                    "description": "This tool selects an option in a dropdown on the current web page based on the description of that element and which option to select.",
                    "parameters": {
                        "properties": {
                            "description": {
                                "description": "Description of which option to select and for which dropdown on the page, clearly stated in natural langauge.",
                                "examples": [
                                    "Select Germany option in the 'Country' dropdown."
                                ],
                                "title": "Description",
                                "type": "string"
                            }
                        },
                        "required": [
                            "description"
                        ],
                        "type": "object"
                    }
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SolveCaptcha",
                    "description": "This tool asks a human to solve captcha on the current webpage. Make sure that captcha is visible before running it.",
                    "parameters": {
                        "properties": {},
                        "type": "object",
                        "required": []
                    }
                },
                "type": "function"
            }
        ]
    }
]